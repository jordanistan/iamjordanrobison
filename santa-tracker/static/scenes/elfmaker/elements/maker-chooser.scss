/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

:host {
  display: block;
}

main {
  $margin: 4px;
  $size: 55px;
  $border: 3px;

  display: flex;

  .row {
    display: flex;
  }

  display: flex;
  margin: $margin / 2;

  @media (min-width: 768px) {
    flex-wrap: wrap;
    justify-content: center;
  }

  @media (max-width: (768px - 1px)) {
    &::before,
    &::after {
      content: '';
      flex-grow: 1;
    }
  }

  .item {
    border: 0;
    position: relative;
    cursor: pointer;
    margin: $margin / 2;

    input {
      position: absolute;
      opacity: 0;
    }

    .opt {
      border-radius: 1000px;
      width: $size;
      height: $size;
      position: relative;
      box-sizing: border-box;
      border: $border solid transparent;
      background: transparent no-repeat center/contain;

      &::before {
        content: '';
        color: white;
        display: block;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: $size * 0.6;
        font-weight: 900;
        text-shadow: 0 1px 0 rgba(0, 0, 0, 0.33);

        font-family: 'Material Icons';
        -webkit-font-smoothing: antialiased;
        text-rendering: optimizeLegibility;
        -moz-osx-font-smoothing: grayscale;
        font-feature-settings: 'liga';
      }
    }

    input:focus + .opt {
      border-color: rgba(0, 0, 0, 0.33);
    }
  }

  // category chooser overrides
  &.mode-category {
    .item {
      input:checked + .opt {
        background-color: #f8ce3c;
      }

      $options: body suit hair ears glasses accessories hats backgrounds;
      @each $option in $options {
        .value-#{$option} {
          background-image: _rel('../img/btn_#{$option}.svg');
        }
      }
    }
  }

  // color chooser overrides
  &:not(.mode-category) {
    .item {
      input:checked + .opt {
        box-shadow: 0 0 0 4px rgba(96, 96, 96, 0.1);
        &::before {
          content: 'check';
        }
      }
    }
  }
}


