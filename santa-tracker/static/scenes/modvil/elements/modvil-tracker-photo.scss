/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@import "../sass/shared";

:host {
  display: inline-block;
}

.inner {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  border: $border-width solid white;
  position: relative;
  transition: transform 0.4s ease-in-out, opacity 0.2s ease-in-out;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: black;
    opacity: var(--photo-darken, 0);
    transition: opacity 0.4s;
    pointer-events: none;
  }

  transform: translateY(0);
  opacity: 1;

  :host([appear]) & {
    transform: translateY(12.5%);
    opacity: 0;
  }

  :host([destroy]) & {
    transform: translateY(0) scale(0);
  }
}

.attribution {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  color: white;
  font-size: 11px;
  line-height: 13px;
  padding: 30px 0 0;
  transition: opacity 0.5s;
  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5));
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);
  display: flex;
  flex-flow: row wrap;
  align-items: flex-end;
  justify-content: space-between;

  a {
    color: inherit;
    text-decoration: none;
    padding: 0 10px 8.5px;
    flex-grow: 100;

    &[href]:hover {
      text-decoration: underline;
    }

    &::after {
      // big click target
      content: '';
      position: absolute;
      height: 4em;
      transform: translateY(-50%);
      left: 0;
      right: 0;
      opacity: 0.25;
      z-index: 100;
    }
  }

  :host(:not([large])) & {
    opacity: 0;
    transition: none;  // hide from weird skew
  }

  &.brand::after {
    content: '';
    background: _rel("../../../img/tracker/localguides.svg") bottom right / contain no-repeat;
    min-width: 100px;
    height: 40px;
    margin-top: -12px;
    margin-bottom: -4px;
    filter: drop-shadow(0 1px 0 rgba(0, 0, 0, 0.25));
    position: relative;
    right: 0;
    justify-self: flex-end;
    flex-grow: 1;
  }
}

:host([large]) {
  .inner {
    pointer-events: auto !important;
  }
}

::slotted(img) {
  position: relative;
  object-fit: cover;
  width: 100%;
  height: 100%;
}
